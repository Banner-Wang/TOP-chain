#pragma once

#include "xbase/xcxx_config.h"

NS_BEG2(top, db_export)

// system
XINLINE_CONSTEXPR char const * BALANCE_AVAILABLE = "$0";    // available balance
XINLINE_CONSTEXPR char const * BALANCE_BURN = "$a";         // burn balance
XINLINE_CONSTEXPR char const * BALANCE_LOCK = "$b";         // lock balance
XINLINE_CONSTEXPR char const * BALANCE_PLEDGE_TGAS = "$c";  // pledge balance for tgas
XINLINE_CONSTEXPR char const * BALANCE_PLEDGE_VOTE = "$d";  // pledge balance for vote
XINLINE_CONSTEXPR char const * LOCK_TGAS = "$00";           // TODO(jimmy) this property should discuss later
XINLINE_CONSTEXPR char const * USED_TGAS_KEY = "$01";
XINLINE_CONSTEXPR char const * LAST_TX_HOUR_KEY = "$02";
XINLINE_CONSTEXPR char const * PLEDGE_VOTE_KEY = "$03";        // the detailed info of pledge vote
XINLINE_CONSTEXPR char const * EXPIRE_VOTE_TOKEN_KEY = "$04";  // the token of all expired pledge token for vote
XINLINE_CONSTEXPR char const * UNVOTE_NUM = "$05";             // unvote number
XINLINE_CONSTEXPR char const * TX_INFO = "$06";
XINLINE_CONSTEXPR char const * TX_INFO_LATEST_SENDTX_NUM = "1";   // XPROPERTY_TX_INFO map field
XINLINE_CONSTEXPR char const * TX_INFO_LATEST_SENDTX_HASH = "2";  // XPROPERTY_TX_INFO map field
XINLINE_CONSTEXPR char const * TX_INFO_RECVTX_NUM = "3";          // XPROPERTY_TX_INFO map field
XINLINE_CONSTEXPR char const * TX_INFO_UNCONFIRM_TX_NUM = "4";    // XPROPERTY_TX_INFO map field
XINLINE_CONSTEXPR char const * ACCOUNT_CREATE_TIME = "$07";
XINLINE_CONSTEXPR char const * LOCK_TOKEN_KEY = "$08";

// user
XINLINE_CONSTEXPR char const* XPROPERTY_LAST_READ_REC_STANDBY_POOL_CONTRACT_BLOCK_HEIGHT = "@38";
XINLINE_CONSTEXPR char const* XPROPERTY_LAST_READ_REC_STANDBY_POOL_CONTRACT_LOGIC_TIME = "@39";
XINLINE_CONSTEXPR char const* XPROPERTY_CONTRACT_STANDBYS_KEY = "@41";
XINLINE_CONSTEXPR char const* XPROPERTY_CONTRACT_ELECTION_RESULT_0_KEY = "@42_0"; // use data::election::get_property_name_by_addr() to calculate it
XINLINE_CONSTEXPR char const* XPROPERTY_CONTRACT_ELECTION_RESULT_1_KEY = "@42_1";
XINLINE_CONSTEXPR char const* XPROPERTY_CONTRACT_ELECTION_RESULT_2_KEY = "@42_2";
XINLINE_CONSTEXPR char const* XPROPERTY_CONTRACT_ELECTION_EXECUTED_KEY = "@42-e";//"@42_EXECUTED";
XINLINE_CONSTEXPR char const* XPROPERTY_CONTRACT_GROUP_ASSOC_KEY = "@43";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_REG_KEY = "@101";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_TIME_KEY = "@102";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_WORKLOAD_KEY = "@103";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_SHARD_KEY = "@104";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_TICKETS_KEY = "@105";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_POLLABLE_KEY = "@107";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_TASK_KEY = "@111";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTES_KEY_BASE = "@112";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTES_KEY1 = "@112-1";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTES_KEY2 = "@112-2";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTES_KEY3 = "@112-3";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTES_KEY4 = "@112-4";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_MAX_TIME_KEY = "@115";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_AWARD_KEY = "@118";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VALIDATOR_KEY = "@120";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTER_DIVIDEND_REWARD_KEY_BASE = "@121";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTER_DIVIDEND_REWARD_KEY1 = "@121-1";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTER_DIVIDEND_REWARD_KEY2 = "@121-2";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTER_DIVIDEND_REWARD_KEY3 = "@121-3";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTER_DIVIDEND_REWARD_KEY4 = "@121-4";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_NODE_REWARD_KEY = "@124";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VALIDATOR_WORKLOAD_KEY = "@125";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_TABLEBLOCK_HEIGHT_KEY = "@126";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_START_HEIGHT_KEY = "@127";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_REFUND_KEY = "@128";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_GENESIS_STAGE_KEY = "@129";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_TGAS_KEY = "@130";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_UNQUALIFIED_NODE_KEY = "@131";
XINLINE_CONSTEXPR const char * XPROPERTY_CONTRACT_SLASH_INFO_KEY = "@132";
XINLINE_CONSTEXPR const char * XPROPERTY_CONTRACT_TABLEBLOCK_NUM_KEY = "@133";
XINLINE_CONSTEXPR const char * XPROPERTY_CONTRACT_EXTENDED_FUNCTION_KEY = "@134";
XINLINE_CONSTEXPR const char * XPROPERTY_CONTRACT_ACCUMULATED_ISSUANCE = "@141";
XINLINE_CONSTEXPR const char * XPROPERTY_CONTRACT_ACCUMULATED_ISSUANCE_YEARLY = "@142";
XINLINE_CONSTEXPR const char * XPROPERTY_LAST_READ_REC_REG_CONTRACT_BLOCK_HEIGHT = "@143";
XINLINE_CONSTEXPR const char * XPROPERTY_LAST_READ_REC_REG_CONTRACT_LOGIC_TIME = "@144";
XINLINE_CONSTEXPR const char * XPORPERTY_CONTRACT_VOTE_REPORT_TIME_KEY = "@145";
XINLINE_CONSTEXPR const char * XPROPERTY_REWARD_DETAIL = "@146";
XINLINE_CONSTEXPR char const* XPROPERTY_TABLE_ACCOUNT_INDEX = "@T0";
XINLINE_CONSTEXPR char const* XPROPERTY_TABLE_RECEIPTID = "@T2";

#define ONCHAIN_PARAMS            "@150"  //"onchain_params" // map of <string, string>
#define SYSTEM_GENERATED_ID       "@151"  //"system_id" // string
#define PROPOSAL_MAP_ID           "@152"  //"proposal_map" // map of <string, string(proposal details)>
//#define COSIGN_MAP_ID           "cosigning_map" // map of <string, map<std::string, bool> >
#define VOTE_MAP_ID               "@154"  //"voting_map" // map of <string, map<std::string, bool> >
#define CURRENT_VOTED_PROPOSAL    "@155"  //"@current_voted"

NS_END2