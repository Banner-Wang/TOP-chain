aux_source_directory(./src xgrpc_mgr_src)
add_compile_options(-Wall)
add_compile_options(-Werror)
add_library(xgrpc_mgr ${xgrpc_mgr_src})

# find_library(gRPCPP_LIBRARIES grpc++ REQUIRED)
find_library(gRPCPP_UNSECURE_LIBRARIES grpc++_unsecure)
find_library(gRPC_LIBRARIES grpc)
# find_library(gRPC_UNSECURE_LIBRARIES grpc_unsecure)
find_library(gRPC_GPR_LIBRARIES gpr)
find_library(gRPC_ADDRESS_SORTING_LIBRARIES address_sorting)
find_library(ares_LIBRARIES cares REQUIRED)
find_package(Protobuf REQUIRED)
find_package(ZLIB REQUIRED)
find_library(absl_strings_LIBRARY absl_strings REQUIRED)
find_library(absl_strings_internal_LIBRARY absl_strings_internal REQUIRED)
find_library(absl_str_format_internal_LIBRARY absl_str_format_internal REQUIRED)
find_library(absl_throw_delegate_LIBRARY absl_throw_delegate REQUIRED)
find_library(absl_bad_optional_access_LIBRARY absl_bad_optional_access REQUIRED)
find_library(absl_int128_LIBRARY absl_int128 REQUIRED)
find_library(absl_raw_logging_internal_LIBRARY absl_raw_logging_internal REQUIRED)
find_library(absl_time_LIBRARY absl_time REQUIRED)
find_library(absl_time_zone_LIBRARY absl_time_zone REQUIRED)
find_package(OpenSSL REQUIRED)

target_link_libraries(
    xgrpc_mgr
    PRIVATE
    xrpc
    xgrpcservice
    # ${gRPCPP_LIBRARIES}
    ${gRPCPP_UNSECURE_LIBRARIES}
    ${gRPC_LIBRARIES}
    ${gRPC_UNSECURE_LIBRARIES}
    ${gRPC_GPR_LIBRARIES}
    ${gRPC_ADDRESS_SORTING_LIBRARIES}
    ${ares_LIBRARIES}
    ZLIB::ZLIB
    ${Protobuf_LIBRARIES}
    ${absl_strings_LIBRARY}
    ${absl_strings_internal_LIBRARY}
    ${absl_str_format_internal_LIBRARY}
    ${absl_throw_delegate_LIBRARY}
    ${absl_bad_optional_access_LIBRARY}
    ${absl_int128_LIBRARY}
    ${absl_raw_logging_internal_LIBRARY}
    ${absl_time_LIBRARY}
    ${absl_time_zone_LIBRARY}
    OpenSSL::SSL
    OpenSSL::Crypto
)

if (BUILD_METRICS)
    #add_dependencies(xgrpc_mgr xmetrics)
    target_link_libraries(xgrpc_mgr PRIVATE xmetrics)
endif()
